// <auto-generated />
using System;
using AberCascadeCalulator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AberCascadeCalulator.Migrations
{
    [DbContext(typeof(cascadeContext))]
    [Migration("20210117121750_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AberCascadeCalulator.Models.Module", b =>
                {
                    b.Property<string>("ModuleId")
                        .HasColumnType("text")
                        .HasColumnName("module_id");

                    b.Property<string>("Coordinator")
                        .HasColumnType("text")
                        .HasColumnName("coordinator");

                    b.Property<long?>("Credits")
                        .HasColumnType("interger")
                        .HasColumnName("credits");

                    b.Property<string>("Department")
                        .HasColumnType("text")
                        .HasColumnName("department");

                    b.Property<string>("Semester")
                        .HasColumnType("text")
                        .HasColumnName("semester");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<byte[]>("Welsh")
                        .HasColumnType("bool")
                        .HasColumnName("welsh");

                    b.Property<string>("Year")
                        .HasColumnType("text")
                        .HasColumnName("year");

                    b.HasKey("ModuleId");

                    b.ToTable("module");
                });

            modelBuilder.Entity("AberCascadeCalulator.Models.Scheme", b =>
                {
                    b.Property<string>("SchemeId")
                        .HasColumnType("text")
                        .HasColumnName("scheme_id");

                    b.Property<string>("Award")
                        .HasColumnType("text")
                        .HasColumnName("award");

                    b.Property<string>("Department")
                        .HasColumnType("text")
                        .HasColumnName("department");

                    b.Property<long?>("Duration")
                        .HasColumnType("interger")
                        .HasColumnName("duration");

                    b.Property<string>("SchemeType")
                        .HasColumnType("text")
                        .HasColumnName("scheme_type");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("UndergraduateOrPostgraduate")
                        .HasColumnType("text")
                        .HasColumnName("undergraduate_or_postgraduate");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<long?>("Year")
                        .HasColumnType("interger")
                        .HasColumnName("year");

                    b.HasKey("SchemeId");

                    b.ToTable("scheme");
                });

            modelBuilder.Entity("AberCascadeCalulator.Models.SchemeModule", b =>
                {
                    b.Property<int>("SchemeModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModuleId")
                        .HasColumnType("text")
                        .HasColumnName("module_id");

                    b.Property<string>("ModuleType")
                        .HasColumnType("text")
                        .HasColumnName("module_type");

                    b.Property<string>("SchemeId")
                        .HasColumnType("text")
                        .HasColumnName("scheme_id");

                    b.HasKey("SchemeModuleId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("SchemeId");

                    b.ToTable("scheme_module");
                });

            modelBuilder.Entity("AberCascadeCalulator.Models.SchemeModule", b =>
                {
                    b.HasOne("AberCascadeCalulator.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("AberCascadeCalulator.Models.Scheme", "Scheme")
                        .WithMany()
                        .HasForeignKey("SchemeId");

                    b.Navigation("Module");

                    b.Navigation("Scheme");
                });
#pragma warning restore 612, 618
        }
    }
}
